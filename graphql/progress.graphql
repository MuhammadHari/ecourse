type Progress {
  id: ID!
  section_id: String!
  content_id: String!
  status: Float!
  content: Content!
  section: Section!
  played: Float!
  pageNumber: Float!
  duration: Float!
  contentType: ContentType!
  completed: Boolean!
  created_at: DateTime!
  updated_at: DateTime
}

type SectionProgress {
  section_id: ID
  progress: Float
}

type StudentClassroom {
  id: ID!
  userId: String
  classroomId: String
  classroom: ClassRoom
  user: User
  sectionProgress: [SectionProgress!]!
    @method(name: "getSectionProgressAttribute")
}

extend type Mutation {
  progressUpdate(id: ID! @eq, played: Int!): Progress! @update
  progressCompletionMark(id: ID! @eq, completed: Boolean!): Progress! @update
}

extend type Query {
  allStudentProgress: [Progress!]! @whereAuth(relation: "user") @all
  studentClassroom(classroom_id: String): StudentClassroom
    @builder(method: "App\\GraphQL\\StudentClassroomResolver@builder")
    @first
  studentProgress(section: ID @where(key: "section_id")): [Progress!]!
    @whereAuth(relation: "user")
    @all
}
