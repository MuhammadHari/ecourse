type Section {
  id: ID!
  classroomId: String!
  classroom: ClassRoom!
  title: String!
  contents: [Content!]! @orderBy(column: "title", direction: ASC)
  contentCount: Int!
  createdAt: Date!
  updatedAt: Date
}
extend type Mutation {
  sections(
    classroomId: ID! @rules(apply: ["required", "exists:classrooms,id"])
    title: String! @rules(apply: ["required"])
  ): Section @create
  sectionUpdate(
    id: ID! @eq @rules(apply: ["exists:sections,id"])
    title: String! @rules(apply: ["required"])
  ): Section @update
}
extend type Query {
  sections: [Section!]! @all
  sectionByClassroom(
    id: ID!
      @rules(apply: ["exists:classrooms,id"])
      @where(key: "classroom_id", operator: "=")
  ): [Section!]! @all @orderBy(column: "title", direction: "ASC")
  section(id: ID @eq): Section @find
}
