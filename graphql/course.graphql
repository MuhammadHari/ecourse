type Course{
  id: ID!
  user_id: Int!
  title: String!
  category: String!
  description: String!
  caption: String!
  image: String!
  sectionCount: Int! @count(relation: "sections")
  created_at: Date!
  updated_at:Date
}

input CreateCourseInput{
  title: String!
  category: String!
  description: String!
  caption: String!
  image: Upload!
}
input UpdateCourseInput{
  title: String
  category: String
  description: String
  caption: String
  image: Upload
}

extend type Mutation @guard {
  course(args : CreateCourseInput! @spread): Course
  @field(resolver: "App\\GraphQL\\CourseResolver@create")
  @inject(context: "user.id", name: "user_id")
  courseUpdate(id: ID!@eq, args: UpdateCourseInput! @spread): Course
  @field(resolver: "App\\GraphQL\\CourseResolver@update")
  @can(model: "Course", find : "id", ability: "update")
}

extend type Query {
  course(id: String! @eq) : Course @find
  courses : Course @paginate
}
